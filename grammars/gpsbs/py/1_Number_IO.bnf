<predefined> ::= 'i0 = i1 = i2 = int()'
                 'f0 = f1 = f2 = float()'
                 'res = float()'
                 <code>
<int_var> ::= 'i0' | 'i1' | 'i2' | 'in0'
<float_var> ::= 'f0' | 'f1' | 'f2' | 'in1' | 'res'
<code> ::= <code><statement>'\n' | <statement>'\n'
<statement> ::= <assign>
<assign> ::= <int_assign>|<float_assign>
<int_assign> ::= <int_var> '=' <int> | <int_var> <arith_assign> <int>
<int> ::= <int_var> | <int_const>
        | <arith_prefix><int>
        | '(' <int> <arith_ops> <int> ')'
        | <int_arith_ops_protected>'('<int>','<int>')'
        | 'min('<int>', '<int>')'
        | 'max('<int>', '<int>')'
        | 'abs('<int>')'
        | 'int(math.ceil('<float>'))' | 'int(math.floor('<float>'))' | 'int(round('<float>'))' | 'int('<float>')'
<int_const> ::= 'int('<number>'.0)'
<number> ::= <number><num> | <num>
<num> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<arith_assign> ::= <arith_ops>'='
<arith_ops> ::= '+'|'-'|'*'
<int_arith_ops_protected> ::= 'divInt' | 'mod'
<arith_prefix> ::= '+'|'-'
<float_assign> ::= <float_var> '=' <float> | <float_var> <arith_assign> <float>
<float> ::= <float_var> | <float_const> | <int>
        | '(' <float> <arith_ops> <float> ')' | '(' <int> <arith_ops> <float> ')' | '(' <float> <arith_ops> <int> ')'
        | <float_arith_ops_protected>'('<float>','<float>')' | <float_arith_ops_protected>'('<int>','<float>')' | <float_arith_ops_protected>'('<float>','<int>')'
        | 'min('<float>', '<float>')' | 'min('<int>', '<float>')' | 'min('<float>', '<int>')'
        | 'max('<float>', '<float>')' | 'max('<int>', '<float>')' | 'max('<float>', '<int>')'
<float_const> ::= <number>'.'<number>
<float_arith_ops_protected> ::= 'div' | 'divInt' | 'mod'