<code> ::= <int_list>
<number> ::= <num><num>
<num> ::= '0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'
<string_list_var> ::= 'xs'
<bool_op> ::= '&&'|'||'
<arith_ops> ::= '+'|'-'|'*'
<int_arith_ops_protected> ::= 'safeIntDiv'|'safeMod'
<prefix> ::= ''|'-'
<comp_op> ::= '=='|'/='|'<'|'>'|'>='|'<='
<fold> ::= 'foldr'|'foldl'
<int> ::= <int_value>|<int_expression>
<int_value> ::= <number>
<int_expression> ::= '('<prefix>' '<int>')'
                        |'(abs '<int>')'
                        |'(('<arith_ops>') '<int>' '<int>')'
                        |'('<int_arith_ops_protected>' '<int>' '<int>')'
                        |'(min '<int>' '<int>')'
                        |'(max '<int>' '<int>')'
                        |'(if '<bool>' then '<int>' else '<int>')'
                        |'(length '<int_list>')'
                        |'(safeMinimumInts '<int_list>')'
                        |'(safeMaximumInts '<int_list>')'
                        |'(safeHeadInts '<int_list>')'
                        |'(safeLastInts '<int_list>')'
                        |'(sum '<int_list>')'
                        |'('<fold>' ('<arith_ops>') '<int>' '<int_list>')'
                        |'('<fold>' '<int_arith_ops_protected>' '<int>' '<int_list>')'
                        |'(length '<string>')'
                        |'(length '<string_list>')'
<bool>  ::= '(not '<bool>')'|'( '<bool>' '<bool_op>' '<bool>' )'
                        |'(if '<bool>' then '<bool>' else '<bool>')'
                        |'(even '<int>')'|'(odd '<int>')'
                        |'('<int>' '<comp_op>' '<int>')'
                        |'('<string>' '<comp_op>' '<string>')'
                        |'('<int_list>' '<comp_op>' '<int_list>')'
                        |'('<string_list>' '<comp_op>' '<string_list>')'
                        |'(null '<int_list>')'
                        |'(null '<string>')'
                        |'(null '<string_list>')'
                        |'(all ('<comp_op>' '<int>') '<int_list>')'
<int_list> ::= '(filter ('<comp_op>' '<int>') '<int_list>')'
                        |'(safeReplicate '<int>' '<int>')'
                        |'(map abs '<int_list>')'
                        |'(if '<bool>' then '<int_list>' else '<int_list>')'
                        |'('<int>':'<int_list>')'
                        |'('<int_list>' ++ '<int_list>')'
                        |'(safeTail '<int_list>')'
                        |'(safeInit '<int_list>')'
                        |'(take '<int>' '<int_list>')'
                        |'(drop '<int>' '<int_list>')'
<string> ::= '('<string>' ++ '<string>')'
                        |'(if '<bool>' then '<string>' else '<string>')'
                        |'(safeTail '<string>')'
                        |'(safeInit '<string>')'
                        |'(unwords '<string_list>')'
                        |'(unlines '<string_list>')'
                        |'(concat '<string_list>')'
                        |'(safeHeadStrings '<string_list>')'
                        |'(safeLastStrings '<string_list>')'

<string_list> ::= <string_list_value>|<string_list_expression>
<string_list_value> ::= <string_list_var>
<string_list_expression> ::= '('<string>':'<string_list>')'
                        |'('<string_list>' ++ '<string_list>')'
                        |'(words '<string>')'
                        |'(if '<bool>' then '<string_list>' else '<string_list>')'
                        |'(lines '<string>')'
                        |'(filter ('<comp_op>' '<string>') '<string_list>')'
                        |'(safeReplicate '<int>' '<string>')'
                        |'(safeTail '<string_list>')'
                        |'(safeInit '<string_list>')'
